/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.sql.ResultSet;
import java.sql.SQLException;

public class MainApp extends javax.swing.JFrame {

    //private final String USER = "usr210215739";
    //private final String PASS = "pw210215739";
    private final String USER = "developer";
    private final String PASS = "Patatas23.";
    final private Database db;

    /**
     * Creates new form MainApp
     */
    public MainApp() {
        //Abrir la conexi√≥n a la base de datos
        db = Database.getDatabase(USER, PASS);
        initComponents();
        this.setSize(800, 600);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        menuInsertar = new javax.swing.JMenu();
        menuReporte = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        menuBrowse = new javax.swing.JMenu();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        menuDelete = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        menuInsertar.setText("Insertar");

        jMenuItem1.setText("Museum");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuInsertar.add(jMenuItem1);

        jMenuItem2.setText("Addresses");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        menuInsertar.add(jMenuItem2);

        jMenuItem3.setText("Members");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        menuInsertar.add(jMenuItem3);

        jMenuItem4.setText("Artefacts");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        menuInsertar.add(jMenuItem4);

        jMenuItem5.setText("Events");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        menuInsertar.add(jMenuItem5);

        jMenuItem6.setText("Artefacts in Events");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        menuInsertar.add(jMenuItem6);

        jMenuItem7.setText("Reference Periods");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        menuInsertar.add(jMenuItem7);

        menuBar.add(menuInsertar);

        menuBrowse.setText("Browse");
        menuBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBrowseActionPerformed(evt);
            }
        });

        jMenuItem8.setText("Museum");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                System.out.println("aber en el event");
                jMenuItem8ActionPerformed(evt);
            }
        });
        menuBrowse.add(jMenuItem8);

        jMenuItem9.setText("Addresses");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        menuBrowse.add(jMenuItem9);

        jMenuItem10.setText("Members");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        menuBrowse.add(jMenuItem10);

        jMenuItem11.setText("Artefacts");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        menuBrowse.add(jMenuItem11);

        jMenuItem12.setText("Events");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        menuBrowse.add(jMenuItem12);

        jMenuItem13.setText("Artefacts in Events");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        menuBrowse.add(jMenuItem13);

        jMenuItem14.setText("Reference Periods");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        menuBrowse.add(jMenuItem14);

        menuBar.add(menuBrowse);

        menuDelete.setText("Borrar");

        jMenuItem15.setText("Museum");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        menuDelete.add(jMenuItem15);

        jMenuItem16.setText("Addresses");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        menuDelete.add(jMenuItem16);

        jMenuItem17.setText("Members");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        menuDelete.add(jMenuItem17);

        jMenuItem18.setText("Artefacts");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        menuDelete.add(jMenuItem18);

        jMenuItem19.setText("Events");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        menuDelete.add(jMenuItem19);

        jMenuItem20.setText("Artefacts in Events");
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        menuDelete.add(jMenuItem20);

        jMenuItem21.setText("Reference Periods");
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        menuDelete.add(jMenuItem21);

        menuBar.add(menuDelete);

        menuReporte.setText("Reports");
        jMenuItem22.setText("Artefacts per Periods");
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        menuReporte.add(jMenuItem22);

        jMenuItem23.setText("Events in museums");
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        menuReporte.add(jMenuItem23);

        jMenuItem24.setText("Artefacts in museums from Baroque");
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        menuReporte.add(jMenuItem24);

        menuBar.add(menuReporte);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 564, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        InsertMuseumDialog dlg = new InsertMuseumDialog(this, db);
        dlg.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        InsertAddresses dialogo = new InsertAddresses(this, db);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        InsertMembers dialogo1 = new InsertMembers(this, db);
        dialogo1.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        InsertArtefacts dialogo = new InsertArtefacts(this, db);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        InsertEvents dialogo = new InsertEvents(this, db);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        InsertArtefactsInEvents dialogo = new InsertArtefactsInEvents(this, db);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        InsertRefPeriods dialogo = new InsertRefPeriods(this, db);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        final String sql = "SELECT \"Museum_ID\" AS \"ID\", listed_building_yn AS \"EDIFICIO CATALOGADO\", shop_yn AS TIENDA, smoking_yn AS FUMAR, admission_charge AS \"COSTO DE INGRESO\"," +
                " anual_visitor_count AS \"CONTEO VISITANTES\", date_built AS \"FECHA DE CONSTRUCCION\", date_became_museum AS \"FECHA QUE FUE MUSEO\", opening_hours AS \"HORA APERTURA\"," +
                " museum_name AS \"NOMBRE DEL MUSEO\", other_museum_details AS \"OTROS DETALLES\" FROM \"Museum\"";
        try {
            ResultSet rs = db.query(sql);

            JDBCTableAdpater modelo = new JDBCTableAdpater(rs);
            modelo.addTableModelListener(new MusumTableListener(db, "Museum","Museum_ID"));
            TableBrowser browser = new TableBrowser("Museum", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {
            System.out.println(ex);
        }


    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        final String sql = "SELECT \"Address_ID\" AS \"ID de direccion\", \"Line_1\" AS \"Calle 1\", \"Line_2\" AS \"Calle 2\", \"city\" AS \"Ciudad\", " +
                "\"postcode\" AS \"CP\", \"county_province_state\" AS \"Provincia/Estado\", \"country\" AS \"Pais\", \"other_details\" AS \"Otros detalles\" " +
                "FROM \"Addresses\"";
        try {
            ResultSet rs = db.query(sql);

            JDBCTableAdpater modelo = new JDBCTableAdpater(rs);
            modelo.addTableModelListener(new MusumTableListener(db, "Addresses","Address_ID"));
            TableBrowser browser = new TableBrowser("Addresses", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        final String sql = "SELECT \"Members_ID\" AS \"ID de miembro\", \"Name\" AS \"Nombre\", \"Contact_details\" AS \"Info de contacto\", " +
                "\"Date_Joined\" AS \"Fecha de union\", \"Date_Membership_Lapsed\" AS \"Fecha de caducidad\", \"Date_Membership_Due\" AS \"Fecha de vencimiento\"," +
                " \"Date_Last_Visit\" AS \"Fecha de ultima visita\", \"Date_Last_Contact\" AS \"Fecha de ultimo contacto\", " +
                "\"Other_Details\" AS \"Otros Detalles\" FROM \"Members\"";

        try {
            ResultSet rs = db.query(sql);

            JDBCTableAdpater modelo = new JDBCTableAdpater(rs);
            modelo.addTableModelListener(new MusumTableListener(db, "Members","Members_ID"));
            TableBrowser browser = new TableBrowser("Members", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        final String sql =
                "SELECT \"Artefact_ID\" AS \"ID del Artefacto\", \"Date_acquired\" AS \"Fecha de adquisicion\", \"Date_Disposed_Of\" AS \"Fecha de eliminacion\"," +
                        " \"Artefact_Name\" AS \"Nombre del artefacto\", \"Artefact_Description\" AS \"Descripcion del artefacto\", \"Other_Details\" AS \"Otros detalles\"" +
                        " FROM \"Artefacts\"";

        try {
            ResultSet rs = db.query(sql);

            JDBCTableAdpater modelo = new JDBCTableAdpater(rs);
            modelo.addTableModelListener(new MusumTableListener(db, "Artefacts","Artefact_ID"));
            TableBrowser browser = new TableBrowser("Artefacts", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        final String sql =
                "SELECT \"Event_ID\" AS \"ID de Evento\", \"Date_Start\" AS \"Fecha de Inicio\", \"Date_End\" AS \"Fecha de final\", \"Event_Name\" AS \"Nombre de evento\"," +
                        " \"Event_Description\" AS \"Descripcion del evento\" FROM \"Events\"";

        try {
            ResultSet rs = db.query(sql);

            JDBCTableAdpater modelo = new JDBCTableAdpater(rs);
            modelo.addTableModelListener(new MusumTableListener(db, "Events","Event_ID"));
            TableBrowser browser = new TableBrowser("Evento", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        final String sql = "SELECT \"Event_ID\" AS \"ID de Evento\", \"Artefact_ID\" as \"ID de Artefacto\" FROM \"Artefacts_in_Events\"";

        try {
            ResultSet rs = db.query(sql);

            JDBCTableAdpater modelo = new JDBCTableAdpater(rs);
            modelo.addTableModelListener(new MusumTableListener(db, "Artifacts_In_Events","Event_ID"));
            TableBrowser browser = new TableBrowser("Artefactos en Eventos", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        final String sql = "SELECT \"Period_Code\" AS \"Codigo de Perdiodo\", \"Period_name\" AS \"Nombre de periodo\", " +
                "\"Period_Description\" AS \"Descripcion del periodo\" FROM \"Ref_Periods\"";

        try {
            ResultSet rs = db.query(sql);

            JDBCTableAdpater modelo = new JDBCTableAdpater(rs);
            modelo.addTableModelListener(new MusumTableListener(db, "Ref_Periods","Period_Code"));
            TableBrowser browser = new TableBrowser("Periodos de referencia", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {

        }
    }//GEN-LAST:event_jMenuItem10ActionPerformed


    private void menuBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBrowseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_menuBrowseActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        DeleteMuseumDialog dialogo = new DeleteMuseumDialog(this, db);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jMenuItem16ActionPerformed


    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        DeleteAddressesDialog dialog = new DeleteAddressesDialog(this, db);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem12ActionPerformed


    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        DeleteMembersDialog dialog = new DeleteMembersDialog(this, db);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        DeleteArtefactDialog dialog = new DeleteArtefactDialog(this, db);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        DeleteEventsDialog dialog = new DeleteEventsDialog(this, db);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        DeleteArtefactsInEventsDialog dialog = new DeleteArtefactsInEventsDialog(this, db);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        DeleteReferencePeriodsDialog dialog = new DeleteReferencePeriodsDialog(this, db);
        dialog.setVisible(true);
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        final String sql = "SELECT \"Artefact_ID\" AS \"ID del Artefacto\", \"Artefact_Name\" AS \"Nombre\", " +
                "\"Artefact_Description\" AS \"Descripcion\", r.\"Period_name\" AS \"Periodo\", r.\"Period_Description\"" +
                " AS \"Desc. del Periodo\" FROM \"Artefacts\" x, \"Ref_Periods\" r WHERE( x.\"Period_Code\" = r.\"Period_Code\")";
        try {
            ResultSet rs = db.query(sql);

            TableAdapter2 modelo = new TableAdapter2(rs);
            TableBrowser browser = new TableBrowser("Artefacts in periods", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {
            System.out.println(ex);
        }


    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        final String sql = "SELECT \"Event_ID\" AS \"ID del Evento\", \"Event_Name\" AS \"Nombre del evento\", " +
        "\"Event_Description\" AS \"Descripcion del evento\", m.museum_name AS \"Nombre del museo\" FROM \"Events\" e," +
                " \"Museum\" m WHERE (e.\"Museum_ID\" = m.\"Museum_ID\")";
        try {
            ResultSet rs = db.query(sql);

            TableAdapter2 modelo = new TableAdapter2(rs);
            TableBrowser browser = new TableBrowser("Events in Museums", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {
            System.out.println(ex);
        }


    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        final String sql = "SELECT \"Ref_Periods\".\"Period_name\", \"Artefacts\".\"Artefact_Name\", \"Museum\".\"museum_name\" " +
                "FROM \"Ref_Periods\" INNER JOIN \"Museum\" ON \"Ref_Periods\".\"Period_name\"='Barroco' INNER JOIN  " +
                "\"Artefacts\" ON \"Artefacts\".\"Period_Code\" = \"Ref_Periods\".\"Period_Code\" AND \"Museum\".\"Museum_ID\" " +
                "= \"Artefacts\".\"Museum_ID\"";
        try {
            ResultSet rs = db.query(sql);

            TableAdapter2 modelo = new TableAdapter2(rs);
            TableBrowser browser = new TableBrowser("Artefacts in Museums from Baroque", modelo);
            browser.setVisible(true);
            this.desktopPane.add(browser);

        } catch (SQLException ex) {
            System.out.println(ex);
        }


    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainApp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuBrowse;
    private javax.swing.JMenu menuDelete;
    private javax.swing.JMenu menuInsertar;
    private javax.swing.JMenu menuReporte;
    // End of variables declaration//GEN-END:variables

}
